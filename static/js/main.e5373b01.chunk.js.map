{"version":3,"sources":["redux/selector/selectors.js","redux/slices/auth.js","redux/services.js","redux/slices/contacts.js","components/navigation/Navigation.jsx","components/authNav/AuthNav.jsx","components/userMenu/UserMenu.jsx","components/appBar/AppBar.jsx","components/PublicRoute.jsx","components/PrivateRoute.jsx","App.jsx","redux/slices/filter.js","redux/store/index.js","index.jsx"],"names":["getLogIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetchingCurrentUser","isFetchingCurrentUser","getFilteredContacts","createSelector","filter","contacts","items","normalizedFilter","toLowerCase","contact","includes","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","logIn","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","authSlice","createSlice","initialState","email","extraReducers","fulfilled","payload","action","pending","rejected","fetchContacts","response","postContact","delContact","contactId","delete","fetchAllContacts","createContact","deleteContact","contactsSlice","status","error","id","Navigation","useSelector","to","exact","AuthNav","UserMenu","userName","dispatch","useDispatch","style","marginRight","fontSize","Button","type","variant","color","onClick","AppBar","display","justifyContent","alignItems","backgroundColor","padding","PublicRoute","children","restricted","routeProps","shouldRedirect","PrivateRoute","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","filterSlice","reducers","actions","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","filterReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e5373b01.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getLogIn = (state) => state.auth.isLoggedIn;\n\nexport const getUserName = (state) => state.auth.user.name;\n\nexport const getIsFetchingCurrentUser = (state) =>\n  state.auth.isFetchingCurrentUser;\n\nexport const getFilter = (state) => state.filter;\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    const result = normalizedFilter\n      ? contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        )\n      : contacts;\n    return result;\n  }\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"http://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {}\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: { name: null, email: null },\n    token: null,\n    isLoggedIn: false,\n    isFetchingCurrentUser: false,\n  },\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nexport async function fetchContacts() {\n  const response = await axios.get(\"/contacts\");\n  return response.data;\n}\n\nexport async function postContact(contact) {\n  const response = await axios.post(\"/contacts\", contact);\n  return response.data;\n}\n\nexport async function delContact(contactId) {\n  const response = await axios.delete(`/contacts/${contactId}`);\n  return response.data;\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchContacts, postContact, delContact } from \"../services\";\n\nexport const fetchAllContacts = createAsyncThunk(\n  \"contacts/fetchAllContacts\",\n  async () => {\n    const response = await fetchContacts();\n\n    return response;\n  }\n);\n\nexport const createContact = createAsyncThunk(\n  \"contacts/createContact\",\n  async (contact) => {\n    const response = await postContact(contact);\n\n    return response;\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (contactId) => {\n    await delContact(contactId);\n\n    return contactId;\n  }\n);\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [],\n    status: null,\n    error: null,\n  },\n  extraReducers: {\n    [fetchAllContacts.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = null;\n      state.error = null;\n    },\n    [fetchAllContacts.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchAllContacts.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"error\";\n    },\n\n    [createContact.fulfilled]: (state, action) => {\n      state.items = [...state.items, action.payload];\n      state.status = null;\n      state.error = null;\n    },\n    [createContact.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = \"error\";\n    },\n    [createContact.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"error\";\n    },\n\n    [deleteContact.fulfilled]: (state, action) => {\n      state.items = state.items.filter((contact) => {\n        console.log(\"payload\", action.payload, contact.id);\n        return contact.id !== action.payload;\n      });\n      state.status = null;\n      state.error = null;\n    },\n    [deleteContact.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = \"error\";\n    },\n    [deleteContact.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"error\";\n    },\n  },\n});\n\nexport default contactsSlice.reducer;\n","import { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getLogIn } from \"../../redux/selector/selectors\";\n\n// const styles = {\n//   link: {\n//     display: \"inline-block\",\n//     textDecoration: \"none\",\n//     padding: 12,\n//     fontWeight: 700,\n//     color: \"#2A363B\",\n//   },\n//   activeLink: {\n//     color: \"#3445c2\",\n//   },\n// };\n\nfunction Navigation() {\n  const isLoggedIn = useSelector(getLogIn);\n\n  return (\n    <nav>\n      <NavLink\n        to=\"/\"\n        exact\n        //   tyle={styles.link} activeStyle={styles.activeLink}\n      >\n        Главная\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          //   style={styles.link}\n          //   activeStyle={styles.activeLink}\n        >\n          Контакты\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import { NavLink } from \"react-router-dom\";\n\n// const styles = {\n//   link: {\n//     display: \"inline-block\",\n//     textDecoration: \"none\",\n//     padding: 12,\n//     fontWeight: 700,\n//     color: \"#2A363B\",\n//   },\n//   activeLink: {\n//     color: \"#3445c2\",\n//   },\n// };\n\nfunction AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        // style={styles.link}\n        // activeStyle={styles.activeLink}\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        //   style={styles.link}\n        //   activeStyle={styles.activeLink}\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n}\n\nexport default AuthNav;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getUserName } from \"../../redux/selector/selectors\";\nimport { logOut } from \"../../redux/slices/auth\";\n\nimport Button from \"@material-ui/core/Button\";\n\nfunction UserMenu() {\n  const userName = useSelector(getUserName);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <span style={{ marginRight: \"30px\", fontSize: \"16px\" }}>\n        Добро пожаловать, {userName}\n      </span>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => dispatch(logOut())}\n      >\n        Выйти\n      </Button>\n    </div>\n  );\n}\n\nexport default UserMenu;\n","import { useSelector } from \"react-redux\";\nimport { getLogIn } from \"../../redux/selector/selectors\";\n\nimport Navigation from \"../navigation/Navigation\";\nimport AuthNav from \"../authNav/AuthNav\";\nimport UserMenu from \"../userMenu/UserMenu\";\n\nfunction AppBar() {\n  const isLoggedIn = useSelector(getLogIn);\n\n  return (\n    <header\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        backgroundColor: \"#858f9a\",\n        padding: \"10px\",\n      }}\n    >\n      <div>\n        <Navigation />\n      </div>\n      <div>{isLoggedIn ? <UserMenu /> : <AuthNav />}</div>\n    </header>\n  );\n}\n\nexport default AppBar;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getLogIn } from \"../redux/selector/selectors\";\n\nfunction PublicRoute({ children, restricted = false, ...routeProps }) {\n  const isLoggedIn = useSelector(getLogIn);\n  const shouldRedirect = isLoggedIn && restricted;\n\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to=\"/contacts\" /> : children}\n    </Route>\n  );\n}\n\nexport default PublicRoute;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getLogIn } from \"../redux/selector/selectors\";\n\nfunction PrivateRoute({ children, ...routeProps }) {\n  const isLoggedIn = useSelector(getLogIn);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\n    </Route>\n  );\n}\n\nexport default PrivateRoute;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, lazy, Suspense } from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport { fetchCurrentUser } from \"./redux/slices/auth\";\nimport { getIsFetchingCurrentUser } from \"./redux/selector/selectors\";\n\nimport AppBar from \"./components/appBar/AppBar\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  const isFetchingCurrentUser = useSelector(getIsFetchingCurrentUser);\n\n  return (\n    !isFetchingCurrentUser && (\n      <>\n        <AppBar />\n\n        <Switch>\n          <Suspense fallback={\"dsadsa\"}>\n            <PublicRoute path=\"/\" exact>\n              <HomeView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" restricted>\n              <RegisterView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" restricted>\n              <LoginView />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\">\n              <ContactsView />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n      </>\n    )\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\n// import { useSelector, useDispatch } from 'react-redux';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    filter: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const { filter } = filterSlice.actions;\nexport default filterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport authReducer from \"../slices/auth\";\nimport contactsReducer from \"../slices/contacts\";\nimport filterReducer from \"../slices/filter\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  // devTools: process.env.NODE_ENV !== \"production\",\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n    filter: filterReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}